managed;
strict ( 2 );

define behavior for ZR_TRAVEL_D //alias <alias_name>
implementation in class zbp_travel_d unique
persistent table /dmo/a_travel_d
lock master
authorization master ( instance, global )
//etag master <field_name>
{
  create ( precheck );
  update ( precheck );
  delete;
  field ( numbering : managed, readonly ) TravelUUID;
  field ( readonly ) TravelID, OverallStatus;
  association _Booking { create ( authorization : update ); }

  action ( authorization : update ) acceptTravel result [1] $self;
  action ( authorization : update ) rejectTravel result [1] $self;
  action ( authorization : update ) deductDiscount parameter Za_Deduct_Discount result [1] $self;
  internal action reCalcTotalPrice;

  determination setTravelId on save { create; }
  determination setStatusOpen on modify { create; }
  determination calcTotPrice on modify { create; field BookingFee, CurrencyCode; }


  side effects
  { field BookingFee affects field TotalPrice;
  }

  field ( mandatory ) CustomerID;
  validation validateCustomer on save { create; field CustomerID; }


  mapping for /dmo/a_travel_d
    {
      AgencyID           = agency_id;
      BeginDate          = begin_date;
      BookingFee         = booking_fee;
      CurrencyCode       = currency_code;
      CustomerID         = customer_id;
      Description        = description;
      EndDate            = end_date;
      LastChangedAt      = last_changed_at;
      LocalCreatedAt     = local_created_at;
      LocalCreatedBy     = local_created_by;
      LocalLastChangedAt = local_last_changed_at;
      LocalLastChangedBy = local_last_changed_by;
      OverallStatus      = overall_status;
      TotalPrice         = total_price;
      TravelID           = travel_id;
      TravelUUID         = travel_uuid;
    }

}

define behavior for ZR_BOOKING_D //alias <alias_name>
implementation in class zbp_booking_d unique
persistent table /dmo/a_booking_d
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;
  field ( numbering : managed, readonly ) BookingUUID;
  field ( readonly ) TravelUUID, BookingID, BookingDate;
  association _Travel;
  association _BookingSupplement { create ( authorization : update ); }

  determination setBookingNumber on save { create; }
  determination setBookingDate on save { create; }
  determination calculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }



  side effects
  { field FlightPrice affects field _Travel.TotalPrice;
  }

  field ( mandatory ) CustomerID;
  validation validateCustomer on save { create; field CustomerID; }

  mapping for /dmo/a_booking_d
    {
      AirlineID          = carrier_id;
      BookingDate        = booking_date;
      BookingID          = booking_id;
      BookingStatus      = booking_status;
      BookingUUID        = booking_uuid;
      ConnectionID       = connection_id;
      CurrencyCode       = currency_code;
      CustomerID         = customer_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      LocalLastChangedAt = local_last_changed_at;
      TravelUUID         = parent_uuid;
    }
}

define behavior for ZR_BookingSupplement_D //alias <alias_name>
implementation in class zbp_bookingsupplement_d unique
persistent table /dmo/a_bksuppl_d
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;
  field ( numbering : managed, readonly ) BookSupplUUID;
  field ( readonly ) TravelUUID, BookingUUID, BookingSupplementID;
  association _Travel;
  association _Booking;

  determination setBookSupplNumber on save { create; }
  determination calculateTotalPrice on modify { create; field CurrencyCode, BookSupplPrice; }

  side effects { field BookSupplPrice affects field _Travel.TotalPrice; }

  field ( mandatory ) SupplementID;
  validation validateSupplement on save { create; field SupplementID; }



  mapping for /dmo/a_bksuppl_d
    {
      BookSupplPrice      = price;
      BookSupplUUID       = booksuppl_uuid;
      BookingSupplementID = booking_supplement_id;
      BookingUUID         = parent_uuid;
      CurrencyCode        = currency_code;
      LocalLastChangedAt  = local_last_changed_at;
      SupplementID        = supplement_id;
      TravelUUID          = root_uuid;
    }
}